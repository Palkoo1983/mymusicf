// --- Bet√∂lt√©skor NE √°ll√≠tsa vissza a b√∂ng√©sz≈ë a kor√°bbi g√∂rget√©si poz√≠ci√≥t ---
(function() {
  if ('scrollRestoration' in history) {
    history.scrollRestoration = 'manual';
  }
  // azonnali (nem "smooth") felg√∂rget√©s a tetej√©re
  window.scrollTo(0, 0);
})();
/* Samsung Internet detekt√°l√°s ‚Äì csak oszt√°lyt rakunk a <html>-re */
(function () {
  if (/SamsungBrowser/i.test(navigator.userAgent)) {
    document.documentElement.classList.add('ua-samsung');
  }
})();

/* =========================================================
   EnZenem ‚Äì main script
   - Tab navigation (vinyl-tabs) + scroll to top
   - Package card selection
   - HOWTO -> ORDER (deleg√°lt) + example chips ‚Üí placeholder
   - Brief helper (counter + quality, NO DUPLICATES) + examples on ORDER
   - Order form (ALWAYS show license modal) + Contact form
   - Thanks overlay
   - Consent bar + License modal
   ========================================================= */

/* ---------- helpers ---------- */
async function postJSON(url, data) {
  const res = await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  });
  if (!res.ok) throw new Error(`HTTP ${res.status}`);
  return await res.json().catch(() => ({}));
}
const qs  = (sel, root = document) => root.querySelector(sel);
const qsa = (sel, root = document) => Array.from(root.querySelectorAll(sel));

/* ---------- tabs ---------- */
function initTabs() {
  const buttons = qsa('.tab');
  const panels  = qsa('main .panel');

  function activate(targetId) {
    if (!targetId) return;

    // ha √©pp m√°s elem van f√≥kuszban, engedj√ºk el
    if (document.activeElement && typeof document.activeElement.blur === 'function') {
      document.activeElement.blur();
    }

    panels.forEach(p => {
      const on = (p.id === targetId);
      p.hidden = !on;
      p.classList.toggle('active', on);
      if (on) p.removeAttribute('inert'); else p.setAttribute('inert', '');
    });

    buttons.forEach(b => {
      const on = (b.dataset.target === targetId);
      b.setAttribute('aria-pressed', on ? 'true' : 'false');
      b.classList.toggle('active', on);
    });

    if (targetId === 'order') setTimeout(initBriefHelper, 50);

    // f√≥kusz az √∫j panel c√≠msor√°ra
    const active = panels.find(p => p.id === targetId);
    const h2 = active && active.querySelector('h2');
    if (h2) {
      h2.setAttribute('tabindex', '-1');
      h2.focus();
    }

    // tetej√©re g√∂rget√©s
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  // initial state
  const activePanel = panels.find(p => p.classList.contains('active')) || panels[0];
  panels.forEach(p => (p.hidden = p !== activePanel));

  buttons.forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.preventDefault();
      activate(btn.dataset.target);
    });
  });
}

/* ---------- package cards (pricing) ---------- */
function initPackages() {
  const cards = qsa('.card.package');
  const orderTabBtn = qs('.tab[data-target="order"]');
  cards.forEach(card => {
    card.addEventListener('click', () => {
      cards.forEach(c => c.classList.remove('selected'));
      card.classList.add('selected');

      const pkg = card.getAttribute('data-package'); // mp3/mp4/wav
      orderTabBtn?.click();
      setTimeout(() => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
        const sel = qs('#order select[name="package"]');
        if (!sel) return;
        if (pkg === 'mp3') sel.value = 'basic';
        else if (pkg === 'mp4') sel.value = 'video';
        else if (pkg === 'wav') sel.value = 'premium';
        sel.dispatchEvent(new Event('change', { bubbles: true }));
      }, 60);
    });
  });
}

/* ---------- HOWTO -> ORDER, example chips (deleg√°lt) ---------- */
function initHowTo() {
  const howto = qs('#howto');
  if (!howto) return;

  const orderTabSelector = '.vinyl-tabs .tab[data-target="order"]';
  function gotoOrder() {
    const btn = qs(orderTabSelector);
    if (!btn) return;
    btn.click(); // a te tab-logik√°d aktiv√°lja az ORDER panelt
    setTimeout(() => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
      const desc = qs('#order textarea[name="brief"], #order textarea#brief, #order textarea');
      if (desc) {
        try { desc.focus({ preventScroll: true }); } catch(_) {}
      }
    }, 60);
  }

  // ‚ÄûUgorj a Megrendel√©shez‚Äù gomb (ha van k√ºl√∂n ilyen)
  const openBtn = qs('#howto-open-order');
  openBtn?.addEventListener('click', (e) => {
    e.preventDefault();
    gotoOrder();
  });

  // Deleg√°lt kattint√°s-kezel√©s B√ÅRMELY minta-chipre a HOWTO panelen
  howto.addEventListener('click', (e) => {
    const chip = e.target.closest('[data-example], .example-chip, .chip.example, .brief-example, .chip');
    if (!chip) return;

    e.preventDefault();
    e.stopPropagation();

    const text =
      chip.getAttribute('data-example') ||
      chip.getAttribute('data-text') ||
      (chip.textContent || '').trim();

    // el≈ësz√∂r √°tv√°ltunk ORDER-re
    gotoOrder();

    // majd pici k√©sleltet√©ssel be√°ll√≠tjuk a placeholdert
    setTimeout(() => {
      const desc = qs('#order textarea[name="brief"], #order textarea#brief, #order textarea');
      if (desc) {
        desc.placeholder = text;              // CSAK placeholder!
        desc.dispatchEvent(new Event('input', { bubbles: true }));
        try { desc.focus({ preventScroll: true }); } catch(_) {}
      }
    }, 140);
  });
}

/* ---------- Le√≠r√°s helper az ORDER panelen (no duplicates) + p√©ld√°k ---------- */
function initBriefHelper() {
  const orderPanel = qs('#order');
  if (!orderPanel) return;

  // guard: ha m√°r l√©trehoztuk, kil√©p√ºnk
  if (qs('#enz-quality', orderPanel)) return;

  const desc = qs('textarea[name="brief"], textarea#brief, textarea', orderPanel);
  if (!desc) return;

  // inf√≥ sor (sz√≠nez√©ssel + Elfogadhat√≥ label)
  const info = document.createElement('div');
  info.id = 'enz-quality';
  info.style.fontSize = '12px';
  info.style.marginTop = '6px';
  info.classList.add('too-short'); // kezdetben piros
  info.innerHTML = '<span id="enz-count">0</span> / 120 <span id="enz-ok-label" aria-live="polite"></span>';
  desc.insertAdjacentElement('afterend', info);

  // minta le√≠r√°sok ‚Äì csak egyszer
  if (!qs('#enz-order-examples', orderPanel)) {
    const exWrap = document.createElement('div');
    exWrap.id = 'enz-order-examples';
    exWrap.style.display = 'flex';
    exWrap.style.flexWrap = 'wrap';
    exWrap.style.gap = '8px';
    exWrap.style.marginTop = '8px';

    const examples = [
      'Sz√ºlet√©snapra k√©sz√ºl a dal a n≈ëv√©remnek, N√≥ra 46 √©ves. Szereti a minim√°l techno √©s house zen√©t. Kulcsszavak: kitart√°s, logika, bar√°ts√°g, √∫jrakezd√©s. Eml√©k: amikor egy√ºtt t√∫r√°ztunk a Cs√≥v√°nyosra.',
      'Esk√ºv≈ëre k√©sz√ºl a dal, Kata √©s M√°t√© sz√°m√°ra. St√≠lus: romantikus pop, lass√∫ temp√≥. Kulcsszavak: h≈±s√©g, k√∂z√∂s j√∂v≈ë, naplemente. Eml√©k: els≈ë k√∂z√∂s balatoni nyaral√°s.',
      '√âvfordul√≥nkra szeretn√©m meglepni a p√°romat. K√∂zepes temp√≥j√∫ rock-pop, pozit√≠v hangulat. Kulcsszavak: humor, k√∂z√∂s f≈ëz√©s, macsk√°nk M√°zli. Eml√©k: amikor megkaptuk az els≈ë k√∂z√∂s lak√°s kulcs√°t.',
      'B√∫cs√∫ztat√≥ra k√©sz√ºl a dal. M√©lt√≥s√°gteljes, nyugodt hangulat, kev√©s dob. Kulcsszavak: h√°la, f√©ny, eml√©kek. Eml√©k: gyerekkori k√∂z√∂s zongor√°z√°s a nappaliban.',
      'C√©ges √©vz√°r√≥ra k√©rek dalt. Temp√≥: lend√ºletes, modern pop/elektronikus. Kulcsszavak: csapatmunka, innov√°ci√≥, 2025 c√©lok, humor. Eml√©k: a tavaszi hackathon gy≈ëzelm√ºnk.',
      'Gyerekdal 6 √©ves kisl√°nynak, Lilinek. Vid√°m, egyszer≈± dallam, k√∂nnyen √©nekelhet≈ë refr√©n. Kulcsszavak: unikornis, sziv√°rv√°ny, ovi-bar√°tok. Eml√©k: k√∂z√∂s bicikliz√©s a parkban.',
      'Nyugd√≠jba vonul√≥ koll√©g√°nak. Hangulat: nosztalgikus, felemel≈ë, akusztikus git√°r+zongora. Kulcsszavak: seg√≠t≈ëk√©szs√©g, humor, 25 √©v, csapat. Eml√©k: a legend√°s h√©tf≈ë reggeli k√°v√©k.',
      'Jobbul√°st k√≠v√°n√≥ dal. Lassan √©p√≠tkez≈ë, rem√©nyt ad√≥ hangulat. Kulcsszavak: kitart√°s, gy√≥gyul√°s, melletted √°llunk. Eml√©k: ny√°ri t√°bort≈±z melletti besz√©lget√©sek.',
      'L√°nyk√©r√©shez k√©sz√ºl≈ë dal. Romantikus pop ballada, meleg hangz√°s. Kulcsszavak: k√∂z√∂s j√∂v≈ë, ‚Äûigen‚Äù pillanat, √∂sszetartoz√°s. Eml√©k: els≈ë cs√≥k a Margitszigeten.',
      'Ballag√°sra/diplom√°hoz k√©r√ºnk dalt. Temp√≥: k√∂zepes, motiv√°l√≥. Kulcsszavak: √°lom, kitart√°s, √∫j kezdet. Eml√©k: √©jszakai tanul√°sok √©s a z√°r√≥vizsga napja.'
    ];

    const exTitle = document.createElement('div');
    exTitle.textContent = 'Minta le√≠r√°sok:';
    exTitle.style.marginTop = '10px';
    exTitle.style.fontSize = '13px';
    exTitle.style.color = '#b6b6c3';
    info.insertAdjacentElement('afterend', exTitle);

    examples.forEach(t => {
      const b = document.createElement('button');
      b.type = 'button';
      b.textContent = (t.slice(0, 24) + '‚Ä¶ p√©lda');
      b.className = 'chip';
      b.style.padding = '6px 10px';
      b.style.borderRadius = '999px';
      b.style.border = '1px solid #2a2b3a';
      b.style.background = '#10111a';
      b.style.color = '#f4f4f7';
      b.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        // csak placeholder ‚Äì a value-t sosem √≠rjuk!
        desc.placeholder = t;
        try { desc.focus({ preventScroll: true }); } catch(_) {}
      });
      exWrap.appendChild(b);
    });

    exTitle.insertAdjacentElement('afterend', exWrap);
  }

  // tipp doboz (rejtett, k√©s≈ëbb aktiv√°lhat√≥)
  const tip = document.createElement('div');
  tip.style.display = 'none';
  tip.style.marginTop = '6px';
  tip.style.padding = '10px';
  tip.style.border = '1px dashed #2b2d3a';
  tip.style.borderRadius = '10px';
  tip.style.background = '#12131a';
  tip.style.color = '#b6b6c3';
  tip.innerHTML = 'üí° <strong>Tipp:</strong> √≠rd le <em>kinek</em> k√©sz√ºl, <em>milyen alkalomra</em>, st√≠lus/hangulat, 3‚Äì5 kulcssz√≥, 1‚Äì2 konkr√©t eml√©k, √©s ha van tilt√≥lista.';
  const anchor = qs('#enz-order-examples', orderPanel) || info;
  anchor.insertAdjacentElement('afterend', tip);

  // min≈ës√©g√©rt√©kel√©s
  const countEl = qs('#enz-count', info);
  const okLabel = qs('#enz-ok-label', info);
  function updateQuality(){
    const len = (desc.value || '').trim().length;
    countEl.textContent = String(len);

    const ok = len >= 120;
    info.classList.toggle('ok', ok);
    info.classList.toggle('too-short', !ok);
    okLabel.textContent = ok ? ' ‚Äî Elfogadhat√≥' : '';
  }
  desc.addEventListener('input', updateQuality);
  updateQuality();

  // Bek√ºld√©s el≈ëtt ellen≈ërz√©s ‚Äì 120 karakter alatt ne engedje
  const form = desc.closest('form');
  form?.addEventListener('submit', (e) => {
    const len = (desc.value || '').trim().length;
    if (len < 120) {
      e.preventDefault();
      alert('A Le√≠r√°s t√∫l r√∂vid. K√©rlek, adj t√∂bb t√°mpontot (kinek, alkalom, st√≠lus, kulcsszavak, eml√©kek), hogy szem√©lyre szabhassuk a dalt.');
      desc.focus();
    }
  });
}

/* ---------- Order form submit (ALWAYS show license modal) ---------- */
function initOrderForm() {
  const orderForm   = qs('#orderForm');
  const orderStatus = qs('#orderStatus');
  const modal       = qs('#license-warning');
  const acceptBtn   = qs('#licenseAccept');
  const cancelBtn   = qs('#licenseCancel');
  if (!orderForm) return;

  // ne legyen nat√≠v navig√°ci√≥ ‚Äì fetch k√ºldi
  orderForm.setAttribute('action', 'javascript:void(0)');

  async function actuallySend(data) {
    if (orderStatus) orderStatus.textContent = 'K√ºld√©s...';
    try {
      const json = await postJSON('/api/order', data);
      if (orderStatus) orderStatus.textContent = json.message || 'K√∂sz√∂nj√ºk! V√°lasz e-mailt k√ºldt√ºnk.';
      orderForm.reset();
      setTimeout(() => {
        const desc = qs('#order textarea[name="brief"]');
        if (desc) desc.dispatchEvent(new Event('input', { bubbles: true }));
      }, 10);
    } catch (err) {
      if (orderStatus) orderStatus.textContent = 'Nem siker√ºlt elk√ºldeni. Pr√≥b√°ld √∫jra k√©s≈ëbb.';
      console.error(err);
    }
  }

  function showModal(){ if (modal){ modal.style.display='block'; modal.setAttribute('aria-hidden','false'); } }
  function hideModal(){ if (modal){ modal.style.display='none';  modal.setAttribute('aria-hidden','true'); } }

  orderForm.addEventListener('submit', (e) => {
    e.preventDefault(); e.stopPropagation();
    const data = Object.fromEntries(new FormData(orderForm).entries());

    // MINDIG k√©rdezz√ºnk r√° (nincs cookie / localStorage)
    showModal();

    const onAccept = () => {
      hideModal();
      acceptBtn?.removeEventListener('click', onAccept);
      cancelBtn?.removeEventListener('click', onCancel);
      actuallySend(data);
    };
    const onCancel = () => {
      hideModal();
      if (orderStatus) orderStatus.textContent = 'A megrendel√©st megszak√≠tottad.';
      acceptBtn?.removeEventListener('click', onAccept);
      cancelBtn?.removeEventListener('click', onCancel);
    };

    acceptBtn?.addEventListener('click', onAccept, { once:true });
    cancelBtn?.addEventListener('click', onCancel, { once:true });
  });
}

/* ---------- Contact form submit + thanks overlay (no redirect) ---------- */
function initContactForm() {
  const contactForm   = qs('#contactForm');
  const contactStatus = qs('#contactStatus');
  const overlay       = qs('#thanksOverlay');
  const overlayClose  = qs('#overlayClose');
  if (!contactForm) return;

  // ne navig√°ljon sehova ‚Äì a JS k√ºldi fetch-csel
  contactForm.setAttribute('action', 'javascript:void(0)');

  contactForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (contactStatus) contactStatus.textContent = 'K√ºld√©s...';

    const data = Object.fromEntries(new FormData(contactForm).entries());

    try {
      const json = await postJSON('/api/contact', data);
      if (contactStatus) contactStatus.textContent = json.message || 'K√∂sz√∂nj√ºk! Hamarosan v√°laszolunk.';
      contactForm.reset();
      overlay?.classList.remove('hidden'); // felugr√≥ ‚ÄûK√∂sz√∂nj√ºk‚Äù k√°rtya
    } catch (err) {
      if (contactStatus) contactStatus.textContent = 'Nem siker√ºlt elk√ºldeni. Pr√≥b√°ld √∫jra k√©s≈ëbb.';
      console.error(err);
    }
  });

  overlayClose?.addEventListener('click', () => overlay?.classList.add('hidden'));
}

/* ---------- Consent bar ---------- */
function initConsent() {
  const bar    = qs('#consent');
  const accept = qs('#consentAccept');
  if (!bar || !accept) return;

  if (localStorage.getItem('enz-consent') === '1') {
    bar.style.display = 'none';
  } else {
    bar.style.display = '';
  }
  accept.addEventListener('click', () => {
    localStorage.setItem('enz-consent', '1');
    bar.style.display = 'none';
  });
}

/* ---------- License modal ---------- */
function initLicenseModal() {
  const modal  = qs('#license-warning');
  const ok     = qs('#licenseAccept');
  const cancel = qs('#licenseCancel');
  if (!modal || !ok || !cancel) return;

  // A t√©nyleges megnyit√°st az Order submit flow int√©zi.
  ok.addEventListener('click', () => { /* submit flow kezeli */ });
  cancel.addEventListener('click', () => {
    modal.style.display = 'none';
    modal.setAttribute('aria-hidden', 'true');
  });
}

/* ---------- boot ---------- */
document.addEventListener('DOMContentLoaded', () => {
  initTabs();
  initPackages();
  initHowTo();       // deleg√°lt HOWTO‚ÜíORDER
  initBriefHelper(); // ha az ORDER akt√≠v lenne indul√°skor
  initOrderForm();
  initContactForm();
  initConsent();
  initLicenseModal();
});

// Anchor ‚Üí tab v√°lt√°s
document.addEventListener('click', (e) => {
  const a = e.target.closest('a[data-jump]');
  if (!a) return;
  e.preventDefault();
  const target = a.getAttribute('data-jump');
  const btn = document.querySelector(`.vinyl-tabs .tab[data-target="${target}"]`);
  if (btn) {
    btn.click();
    btn.focus();
  }
});

// K√∂sz√∂nj√ºk overlay ‚Äûintelligens‚Äù megjelen√≠t√©s
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('contactForm');
  const statusEl = document.getElementById('contactStatus');
  const overlay = document.getElementById('thanksOverlay');
  const closeBtn = document.getElementById('overlayClose');

  if (!overlay) return;

  // 1) Ha a st√°tusz sz√∂veg ‚Äûelk√ºldve‚Äù √°llapotra v√°lt, felugrik az overlay
  if (statusEl) {
    const obs = new MutationObserver(() => {
      const t = (statusEl.textContent || '').toLowerCase();
      if (t.includes('elk√ºldve') || t.includes('k√∂sz√∂nj√ºk')) {
        overlay.classList.remove('hidden');
        overlay.classList.add('show');
      }
    });
    obs.observe(statusEl, { childList: true, subtree: true, characterData: true });
  }

  // 3) Bez√°r√°s gomb ‚Äì overlay elt≈±nik
  if (closeBtn) {
    closeBtn.addEventListener('click', () => {
      overlay.classList.add('hidden');
      overlay.classList.remove('show');
    });
  }
});

/* Samsung Internet fix ‚Äì smoothScroll + preventScroll polyfill */
(function() {
  // smooth scroll fallback
  if (!('scrollBehavior' in document.documentElement.style)) {
    window.scrollToSmooth = (opts) => window.scrollTo(0, opts?.top || 0);
  } else {
    window.scrollToSmooth = (opts) => window.scrollTo(opts);
  }

  // preventScroll fix for focus()
  const origFocus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function(opts) {
    try {
      if (opts && opts.preventScroll) {
        const x = window.scrollX, y = window.scrollY;
        origFocus.call(this);
        window.scrollTo(x, y);
      } else {
        origFocus.call(this, opts);
      }
    } catch {
      origFocus.call(this);
    }
  };
})();
// LOG√ì: a forg√°st a sz√ºl≈ë wrapperre tessz√ºk, az <img> marad fix m√©ret≈± (tegnapi bev√°lt fix)
document.addEventListener('DOMContentLoaded', () => {
  const logoImg = document.querySelector('.topbar .brand > img.spinning-vinyl, .site-logo img');
  if (!logoImg) return;

  // ha m√°r be van csomagolva, nem csin√°lunk semmit
  if (logoImg.closest('.spin-wrap')) return;

  // wrapper l√©trehoz√°sa √©s beilleszt√©se
  const wrap = document.createElement('span');
  wrap.className = 'spin-wrap';
  logoImg.parentNode.insertBefore(wrap, logoImg);
  wrap.appendChild(logoImg);
});
// LOG√ì: wrap + integer px. A lemezekhez NEM ny√∫lunk.
document.addEventListener('DOMContentLoaded', () => {
  const logoImg = document.querySelector('.topbar .brand > img.spinning-vinyl, .site-logo img');
  if (!logoImg) return;

  // ha m√°r be van csomagolva, ne duplik√°ljuk
  if (!logoImg.closest('.spin-wrap')) {
    const wrap = document.createElement('span');
    wrap.className = 'spin-wrap';
    logoImg.parentNode.insertBefore(wrap, logoImg);
    wrap.appendChild(logoImg);
  }
  const wrap = logoImg.closest('.spin-wrap');

  // MEN√ú lemez aktu√°lis sz√©less√©g√©nek m√©r√©se ‚Üí integer px (sweet spot)
  const tab = document.querySelector('.vinyl-tabs .tab');
  // fallback: ha nincs tab, haszn√°ljuk a jelenlegi logo sz√©less√©g√©t
  const baseW = tab ? tab.getBoundingClientRect().width : logoImg.getBoundingClientRect().width;
  const size = Math.round(baseW);           // eg√©sz px ‚Üí nem rec√©s
  wrap.style.width  = size + 'px';
  wrap.style.height = size + 'px';

  // biztosan ne forogjon a k√©p, csak a wrap (fel√ºl√≠rjuk inline is)
  logoImg.style.animation = 'none';
  logoImg.style.transform = 'none';
  logoImg.style.width  = '100%';
  logoImg.style.height = '100%';
});
// ORDER "Minta le√≠r√°sok" ‚Äì fut√°s k√∂zben besz√∫rjuk a sz√ºks√©ges CSS-t
(function injectOrderExamplesStyles(){
  const id = 'order-example-hotfix';
  const old = document.getElementById(id);
  if (old) old.remove();
  const css = `
#order #enz-order-examples .chip,
#order #enz-order-examples .chip * {
  background: #000 !important;
  color: #f3d27a !important;
  -webkit-text-fill-color: #f3d27a !important;
  background-image: none !important;
  -webkit-background-clip: initial !important;
  background-clip: initial !important;
  text-shadow: none !important;
  border: 1px solid #d4af37 !important;
  border-radius: 999px !important;
  padding: 8px 12px !important;
  opacity: 1 !important;
  mix-blend-mode: normal !important;
  text-indent: 0 !important;
  letter-spacing: normal !important;
}
#order #enz-order-examples .chip:hover,
#order #enz-order-examples .chip:focus {
  box-shadow: 0 0 0 2px rgba(243,210,122,.25) inset !important;
  outline: none !important;
}
  `.trim();
  const style = document.createElement('style');
  style.id = id;
  style.textContent = css;
  document.head.appendChild(style);
})();
// --- HOWTO p√©ld√°k: t√∂lts√ºk fel a hi√°nyz√≥ data-example-√∂ket ---
(function seedHowtoExamples(){
  const map = {
    "Sz√ºlinap": "Sz√ºlet√©snapra k√©sz√ºl a dal a n≈ëv√©remnek, N√≥ra 46 √©ves. Szereti a minim√°l techno √©s house zen√©t. Kulcsszavak: kitart√°s, logika, bar√°ts√°g, √∫jrakezd√©s. Eml√©k: amikor egy√ºtt t√∫r√°ztunk a Cs√≥v√°nyosra.",
    "Esk√ºv≈ë": "Esk√ºv≈ëre k√©sz√ºl a dal, Kata √©s M√°t√© sz√°m√°ra. St√≠lus: romantikus pop, lass√∫ temp√≥. Kulcsszavak: h≈±s√©g, k√∂z√∂s j√∂v≈ë, naplemente. Eml√©k: els≈ë k√∂z√∂s balatoni nyaral√°s.",
    "√âvfordul√≥": "√âvfordul√≥nkra szeretn√©m meglepni a p√°romat. K√∂zepes temp√≥j√∫ rock-pop, pozit√≠v hangulat. Kulcsszavak: humor, k√∂z√∂s f≈ëz√©s, macsk√°nk M√°zli. Eml√©k: amikor megkaptuk az els≈ë k√∂z√∂s lak√°s kulcs√°t.",
    "B√∫cs√∫ztat√≥": "B√∫cs√∫ztat√≥ra k√©sz√ºl a dal. M√©lt√≥s√°gteljes, nyugodt hangulat, kev√©s dob. Kulcsszavak: h√°la, f√©ny, eml√©kek. Eml√©k: gyerekkori k√∂z√∂s zongor√°z√°s a nappaliban.",
    "C√©ges rendezv√©ny": "C√©ges √©vz√°r√≥ra k√©rek dalt. Temp√≥: lend√ºletes, modern pop/elektronikus. Kulcsszavak: csapatmunka, innov√°ci√≥, 2025 c√©lok, humor. Eml√©k: a tavaszi hackathon gy≈ëzelm√ºnk.",
    "Gyerekdal": "Gyerekdal 6 √©ves kisl√°nynak, Lilinek. Vid√°m, egyszer≈± dallam, k√∂nnyen √©nekelhet≈ë refr√©n. Kulcsszavak: unikornis, sziv√°rv√°ny, ovi-bar√°tok. Eml√©k: k√∂z√∂s bicikliz√©s a parkban.",
    "Nyugd√≠j": "Nyugd√≠jba vonul√≥ koll√©g√°nak. Hangulat: nosztalgikus, felemel≈ë, akusztikus git√°r+zongora. Kulcsszavak: seg√≠t≈ëk√©szs√©g, humor, 25 √©v, csapat. Eml√©k: a legend√°s h√©tf≈ë reggeli k√°v√©k.",
    "Jobbul√°st": "Jobbul√°st k√≠v√°n√≥ dal. Lassan √©p√≠tkez≈ë, rem√©nyt ad√≥ hangulat. Kulcsszavak: kitart√°s, gy√≥gyul√°s, melletted √°llunk. Eml√©k: ny√°ri t√°bort≈±z melletti besz√©lget√©sek.",
    "L√°nyk√©r√©s": "L√°nyk√©r√©shez k√©sz√ºl≈ë dal. Romantikus pop ballada, meleg hangz√°s. Kulcsszavak: k√∂z√∂s j√∂v≈ë, ‚Äûigen‚Äù pillanat, √∂sszetartoz√°s. Eml√©k: els≈ë cs√≥k a Margitszigeten.",
    "Ballag√°s/Diploma": "Ballag√°sra/diplom√°hoz k√©r√ºnk dalt. Temp√≥: k√∂zepes, motiv√°l√≥. Kulcsszavak: √°lom, kitart√°s, √∫j kezdet. Eml√©k: √©jszakai tanul√°sok √©s a z√°r√≥vizsga napja."
  };

  const chips = document.querySelectorAll('#howto .examples .chip');
  chips.forEach(btn => {
    if (!btn.hasAttribute('data-example')) {
      const label = (btn.textContent || '').replace(/^[^\w√Å√â√ç√ì√ñ≈ê√ö√ú≈∞√°√©√≠√≥√∂≈ë√∫√º≈±]+/, '').trim(); // emoji lecs√≠p√©se
      const key = Object.keys(map).find(k => label.includes(k));
      if (key) btn.setAttribute('data-example', map[key]);
    }
  });
})();
// === ORDER k√∂telez≈ë mez≈ëk: Nyelv + Le√≠r√°s (min 120) ‚Äì bek√ºld√©s blokkol√°sa ===
(function hardenOrderValidation(){
  const form = document.getElementById('orderForm');
  if (!form) return;

  const lang = form.querySelector('input[name="language"]');
  const desc = form.querySelector('textarea[name="brief"], textarea#brief, textarea');

  // tegy√ºk k√∂telez≈ëv√© nat√≠van is
  if (lang) lang.setAttribute('required', '');
  if (desc) { desc.setAttribute('required', ''); desc.setAttribute('minlength', '120'); }

  // glob√°lis, CAPTURE f√°zis√∫ submit-≈ër ‚Äì megel≈ëzi a t√∂bbi listener m≈±k√∂d√©s√©t
  document.addEventListener('submit', function(e){
    if (e.target !== form) return;

    // alaphelyzet: nincs hiba
    if (lang) lang.setCustomValidity('');
    if (desc) desc.setCustomValidity('');

    const missingLang = !lang || !lang.value || !lang.value.trim();
    const briefText   = desc ? (desc.value || '').trim() : '';
    let ok = true;

    if (missingLang){
      ok = false;
      if (lang) lang.setCustomValidity('K√©rlek add meg a nyelvet.');
    }
    if (desc && briefText.length < 120){
      ok = false;
      desc.setCustomValidity('K√©rlek √≠rj legal√°bb 120 karaktert a le√≠r√°sba.');
    }

    if (!ok){
      e.preventDefault();
      e.stopPropagation();           // ne fusson le semmilyen m√°sik submit-handler
      form.reportValidity();         // nat√≠v bubor√©k/kiemel√©s
    }
  }, true); // ‚¨Ö capture: igaz
})();
